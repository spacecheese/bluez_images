name: Build and Test Images

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Set Matrix
        id: set-matrix
        uses: druzsan/setup-matrix@v2
        with:
          # Use | to preserve valid YAML syntax
          matrix: |
            include:
            - bluez_version: "5.50"
              os: "ubuntu-22.04"
              build_container: "ubuntu:22.04"
            - bluez_version: "5.64"
              os: "ubuntu-24.04"
              build_container: "ubuntu:24.04"
            - bluez_version: "5.66"
              os: "ubuntu-24.04"
              build_container: "ubuntu:24.04"
            - bluez_version: "5.70"
              os: "ubuntu-24.04"
              build_container: "ubuntu:24.04"

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  build-image:
    needs: setup
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}

    container: ${{ matrix.build_container }}

    env:
      OS: ${{ matrix.os }}
      BLUEZ_VERSION: ${{ matrix.bluez_version }}
      IMAGE_SPEC: ${{ matrix.os }}-bluez-${{ matrix.bluez_version }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        apt-get update
        apt-get install -y \
          build-essential libdbus-1-dev libudev-dev libical-dev \
          libreadline-dev libglib2.0-dev libbluetooth-dev libusb-dev \
          dbus wget curl ca-certificates python3 \
          cloud-image-utils qemu-utils qemu-system-x86 \
          dosfstools

    - name: Build QEMU image
      run: ./build-image.sh "$BLUEZ_VERSION" "$OS"

    - name: Upload image
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.IMAGE_SPEC }}.qcow2
        path: ${{ env.IMAGE_SPEC }}/${{ env.IMAGE_SPEC }}-compressed.qcow2

    outputs:
      output_image: ${{ env.IMAGE_SPEC }}.qcow2

  test-image:
    runs-on: ubuntu-latest
    needs: [setup, build-image]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}

    steps:
      - name: Download image artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-image.outputs.output_image }}
          path: .

      - name: Install runtime dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-utils qemu-system-x86 openssh-client sshpass

      - name: Test Image
        run: |
          ./test-image.sh ${{ needs.build-image.outputs.output_image }}